// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/sync.proto

package sync

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WriteRequest struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Author               string   `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Table                string   `protobuf:"bytes,4,opt,name=table,proto3" json:"table,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dcb3cab7b591a9, []int{0}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *WriteRequest) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *WriteRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *WriteRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

type WriteResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteResponse) Reset()         { *m = WriteResponse{} }
func (m *WriteResponse) String() string { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()    {}
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dcb3cab7b591a9, []int{1}
}

func (m *WriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteResponse.Unmarshal(m, b)
}
func (m *WriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteResponse.Marshal(b, m, deterministic)
}
func (m *WriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteResponse.Merge(m, src)
}
func (m *WriteResponse) XXX_Size() int {
	return xxx_messageInfo_WriteResponse.Size(m)
}
func (m *WriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteResponse proto.InternalMessageInfo

func (m *WriteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ReadRequest struct {
	First                int64    `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	Last                 int64    `protobuf:"varint,2,opt,name=last,proto3" json:"last,omitempty"`
	Table                string   `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dcb3cab7b591a9, []int{2}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetFirst() int64 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *ReadRequest) GetLast() int64 {
	if m != nil {
		return m.Last
	}
	return 0
}

func (m *ReadRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

type ReadResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Author               string   `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dcb3cab7b591a9, []int{3}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReadResponse) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *ReadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetDifferenceRequest struct {
	Local                int64    `protobuf:"varint,1,opt,name=local,proto3" json:"local,omitempty"`
	Table                string   `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDifferenceRequest) Reset()         { *m = GetDifferenceRequest{} }
func (m *GetDifferenceRequest) String() string { return proto.CompactTextString(m) }
func (*GetDifferenceRequest) ProtoMessage()    {}
func (*GetDifferenceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dcb3cab7b591a9, []int{4}
}

func (m *GetDifferenceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDifferenceRequest.Unmarshal(m, b)
}
func (m *GetDifferenceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDifferenceRequest.Marshal(b, m, deterministic)
}
func (m *GetDifferenceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDifferenceRequest.Merge(m, src)
}
func (m *GetDifferenceRequest) XXX_Size() int {
	return xxx_messageInfo_GetDifferenceRequest.Size(m)
}
func (m *GetDifferenceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDifferenceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDifferenceRequest proto.InternalMessageInfo

func (m *GetDifferenceRequest) GetLocal() int64 {
	if m != nil {
		return m.Local
	}
	return 0
}

func (m *GetDifferenceRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

type GetDifferenceResponse struct {
	Difference           int64    `protobuf:"varint,1,opt,name=difference,proto3" json:"difference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDifferenceResponse) Reset()         { *m = GetDifferenceResponse{} }
func (m *GetDifferenceResponse) String() string { return proto.CompactTextString(m) }
func (*GetDifferenceResponse) ProtoMessage()    {}
func (*GetDifferenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dcb3cab7b591a9, []int{5}
}

func (m *GetDifferenceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDifferenceResponse.Unmarshal(m, b)
}
func (m *GetDifferenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDifferenceResponse.Marshal(b, m, deterministic)
}
func (m *GetDifferenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDifferenceResponse.Merge(m, src)
}
func (m *GetDifferenceResponse) XXX_Size() int {
	return xxx_messageInfo_GetDifferenceResponse.Size(m)
}
func (m *GetDifferenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDifferenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDifferenceResponse proto.InternalMessageInfo

func (m *GetDifferenceResponse) GetDifference() int64 {
	if m != nil {
		return m.Difference
	}
	return 0
}

type CheckRequest struct {
	Table1               string   `protobuf:"bytes,1,opt,name=table1,proto3" json:"table1,omitempty"`
	Table2               string   `protobuf:"bytes,2,opt,name=table2,proto3" json:"table2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRequest) Reset()         { *m = CheckRequest{} }
func (m *CheckRequest) String() string { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()    {}
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dcb3cab7b591a9, []int{6}
}

func (m *CheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckRequest.Unmarshal(m, b)
}
func (m *CheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckRequest.Marshal(b, m, deterministic)
}
func (m *CheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRequest.Merge(m, src)
}
func (m *CheckRequest) XXX_Size() int {
	return xxx_messageInfo_CheckRequest.Size(m)
}
func (m *CheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRequest proto.InternalMessageInfo

func (m *CheckRequest) GetTable1() string {
	if m != nil {
		return m.Table1
	}
	return ""
}

func (m *CheckRequest) GetTable2() string {
	if m != nil {
		return m.Table2
	}
	return ""
}

type CheckResponse struct {
	Table                string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckResponse) Reset()         { *m = CheckResponse{} }
func (m *CheckResponse) String() string { return proto.CompactTextString(m) }
func (*CheckResponse) ProtoMessage()    {}
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56dcb3cab7b591a9, []int{7}
}

func (m *CheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResponse.Unmarshal(m, b)
}
func (m *CheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResponse.Marshal(b, m, deterministic)
}
func (m *CheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResponse.Merge(m, src)
}
func (m *CheckResponse) XXX_Size() int {
	return xxx_messageInfo_CheckResponse.Size(m)
}
func (m *CheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResponse proto.InternalMessageInfo

func (m *CheckResponse) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func init() {
	proto.RegisterType((*WriteRequest)(nil), "WriteRequest")
	proto.RegisterType((*WriteResponse)(nil), "WriteResponse")
	proto.RegisterType((*ReadRequest)(nil), "ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "ReadResponse")
	proto.RegisterType((*GetDifferenceRequest)(nil), "GetDifferenceRequest")
	proto.RegisterType((*GetDifferenceResponse)(nil), "GetDifferenceResponse")
	proto.RegisterType((*CheckRequest)(nil), "CheckRequest")
	proto.RegisterType((*CheckResponse)(nil), "CheckResponse")
}

func init() {
	proto.RegisterFile("proto/sync.proto", fileDescriptor_56dcb3cab7b591a9)
}

var fileDescriptor_56dcb3cab7b591a9 = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xcd, 0x4e, 0xc2, 0x40,
	0x10, 0xce, 0xd2, 0x82, 0x32, 0xb6, 0xc4, 0x6c, 0x80, 0x34, 0x3d, 0x18, 0xd2, 0x84, 0xa4, 0xc6,
	0x64, 0x55, 0x3c, 0x78, 0xe3, 0xe0, 0x4f, 0x3c, 0x79, 0x59, 0x13, 0x3d, 0x97, 0x65, 0x91, 0xc6,
	0xda, 0x62, 0x77, 0x9b, 0xc8, 0xfb, 0xf9, 0x60, 0x86, 0xe9, 0x16, 0x16, 0xc3, 0xd1, 0xdb, 0x7c,
	0xd3, 0xee, 0xf7, 0x33, 0x33, 0x70, 0xba, 0x2a, 0x0b, 0x5d, 0x5c, 0xaa, 0x75, 0x2e, 0x18, 0x96,
	0x51, 0x06, 0xde, 0x5b, 0x99, 0x6a, 0xc9, 0xe5, 0x57, 0x25, 0x95, 0xa6, 0x7d, 0x68, 0x8b, 0xa2,
	0xca, 0x75, 0x40, 0x46, 0x24, 0x76, 0x78, 0x0d, 0xe8, 0x10, 0x3a, 0x49, 0xa5, 0x97, 0x45, 0x19,
	0xb4, 0x46, 0x24, 0xee, 0x72, 0x83, 0x68, 0x00, 0x47, 0x9f, 0x52, 0xa9, 0xe4, 0x5d, 0x06, 0x0e,
	0x7e, 0x68, 0xe0, 0x86, 0x47, 0x27, 0xb3, 0x4c, 0x06, 0x2e, 0xf6, 0x6b, 0x10, 0x9d, 0x83, 0x6f,
	0xd4, 0xd4, 0xaa, 0xc8, 0x95, 0xdc, 0x10, 0xa8, 0x4a, 0x08, 0xa9, 0x14, 0x0a, 0x1e, 0xf3, 0x06,
	0x46, 0xcf, 0x70, 0xc2, 0x65, 0x32, 0xb7, 0x7c, 0x2d, 0xd2, 0x52, 0x6d, 0x7d, 0x21, 0xa0, 0x14,
	0xdc, 0x2c, 0x51, 0x1a, 0x5d, 0x39, 0x1c, 0xeb, 0x9d, 0xb2, 0x63, 0x2b, 0xbf, 0x82, 0x57, 0xd3,
	0x19, 0xe1, 0x7f, 0xca, 0x19, 0xdd, 0x41, 0xff, 0x49, 0xea, 0x87, 0x74, 0xb1, 0x90, 0xa5, 0xcc,
	0x85, 0x3d, 0xc7, 0xac, 0x10, 0x49, 0xd6, 0xf0, 0x23, 0xd8, 0x79, 0x6b, 0xd9, 0xde, 0x6e, 0x61,
	0xf0, 0x87, 0xc3, 0x98, 0x3c, 0x03, 0x98, 0x6f, 0xbb, 0x86, 0xc9, 0xea, 0x44, 0x53, 0xf0, 0xee,
	0x97, 0x52, 0x7c, 0x34, 0xa2, 0x43, 0xe8, 0x20, 0xe3, 0x35, 0xfe, 0xdb, 0xe5, 0x06, 0x6d, 0xfb,
	0x93, 0x26, 0x56, 0x8d, 0xa2, 0x31, 0xf8, 0xe6, 0xfd, 0x6e, 0x2a, 0xb5, 0x3f, 0x62, 0xf9, 0x9b,
	0xfc, 0x10, 0x70, 0x5f, 0xd6, 0xb9, 0xa0, 0x31, 0xb4, 0x71, 0x7d, 0xd4, 0x67, 0xf6, 0xd1, 0x84,
	0x3d, 0xb6, 0xb7, 0xd5, 0x98, 0xd0, 0x29, 0xf8, 0x7b, 0x91, 0xe8, 0x80, 0x1d, 0x1a, 0x53, 0x38,
	0x64, 0x87, 0x93, 0x8f, 0xc1, 0xdd, 0xac, 0x8b, 0x7a, 0xcc, 0x3a, 0x82, 0xd0, 0x67, 0xf6, 0x0e,
	0xaf, 0x08, 0xbd, 0x00, 0xc0, 0x00, 0x8f, 0xdf, 0xa9, 0xd2, 0xd4, 0x67, 0xf6, 0x34, 0xc2, 0x1e,
	0xdb, 0x0b, 0x37, 0xeb, 0xe0, 0xc5, 0xdf, 0xfc, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x77, 0xd4,
	0x08, 0x05, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SyncClient is the client API for Sync service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SyncClient interface {
	Write(ctx context.Context, opts ...grpc.CallOption) (Sync_WriteClient, error)
	GetDifference(ctx context.Context, in *GetDifferenceRequest, opts ...grpc.CallOption) (*GetDifferenceResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (Sync_ReadClient, error)
	CheckExist(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error)
}

type syncClient struct {
	cc grpc.ClientConnInterface
}

func NewSyncClient(cc grpc.ClientConnInterface) SyncClient {
	return &syncClient{cc}
}

func (c *syncClient) Write(ctx context.Context, opts ...grpc.CallOption) (Sync_WriteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Sync_serviceDesc.Streams[0], "/Sync/Write", opts...)
	if err != nil {
		return nil, err
	}
	x := &syncWriteClient{stream}
	return x, nil
}

type Sync_WriteClient interface {
	Send(*WriteRequest) error
	CloseAndRecv() (*WriteResponse, error)
	grpc.ClientStream
}

type syncWriteClient struct {
	grpc.ClientStream
}

func (x *syncWriteClient) Send(m *WriteRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *syncWriteClient) CloseAndRecv() (*WriteResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(WriteResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *syncClient) GetDifference(ctx context.Context, in *GetDifferenceRequest, opts ...grpc.CallOption) (*GetDifferenceResponse, error) {
	out := new(GetDifferenceResponse)
	err := c.cc.Invoke(ctx, "/Sync/GetDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (Sync_ReadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Sync_serviceDesc.Streams[1], "/Sync/Read", opts...)
	if err != nil {
		return nil, err
	}
	x := &syncReadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Sync_ReadClient interface {
	Recv() (*ReadResponse, error)
	grpc.ClientStream
}

type syncReadClient struct {
	grpc.ClientStream
}

func (x *syncReadClient) Recv() (*ReadResponse, error) {
	m := new(ReadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *syncClient) CheckExist(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error) {
	out := new(CheckResponse)
	err := c.cc.Invoke(ctx, "/Sync/CheckExist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SyncServer is the server API for Sync service.
type SyncServer interface {
	Write(Sync_WriteServer) error
	GetDifference(context.Context, *GetDifferenceRequest) (*GetDifferenceResponse, error)
	Read(*ReadRequest, Sync_ReadServer) error
	CheckExist(context.Context, *CheckRequest) (*CheckResponse, error)
}

// UnimplementedSyncServer can be embedded to have forward compatible implementations.
type UnimplementedSyncServer struct {
}

func (*UnimplementedSyncServer) Write(srv Sync_WriteServer) error {
	return status.Errorf(codes.Unimplemented, "method Write not implemented")
}
func (*UnimplementedSyncServer) GetDifference(ctx context.Context, req *GetDifferenceRequest) (*GetDifferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDifference not implemented")
}
func (*UnimplementedSyncServer) Read(req *ReadRequest, srv Sync_ReadServer) error {
	return status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedSyncServer) CheckExist(ctx context.Context, req *CheckRequest) (*CheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckExist not implemented")
}

func RegisterSyncServer(s *grpc.Server, srv SyncServer) {
	s.RegisterService(&_Sync_serviceDesc, srv)
}

func _Sync_Write_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SyncServer).Write(&syncWriteServer{stream})
}

type Sync_WriteServer interface {
	SendAndClose(*WriteResponse) error
	Recv() (*WriteRequest, error)
	grpc.ServerStream
}

type syncWriteServer struct {
	grpc.ServerStream
}

func (x *syncWriteServer) SendAndClose(m *WriteResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *syncWriteServer) Recv() (*WriteRequest, error) {
	m := new(WriteRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Sync_GetDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDifferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServer).GetDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Sync/GetDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServer).GetDifference(ctx, req.(*GetDifferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sync_Read_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SyncServer).Read(m, &syncReadServer{stream})
}

type Sync_ReadServer interface {
	Send(*ReadResponse) error
	grpc.ServerStream
}

type syncReadServer struct {
	grpc.ServerStream
}

func (x *syncReadServer) Send(m *ReadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Sync_CheckExist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServer).CheckExist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Sync/CheckExist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServer).CheckExist(ctx, req.(*CheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Sync",
	HandlerType: (*SyncServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDifference",
			Handler:    _Sync_GetDifference_Handler,
		},
		{
			MethodName: "CheckExist",
			Handler:    _Sync_CheckExist_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Write",
			Handler:       _Sync_Write_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Read",
			Handler:       _Sync_Read_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/sync.proto",
}
